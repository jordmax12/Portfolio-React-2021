name: CI
on:
  push:
    branches:
      - master
env:
  AWS_S3_BUCKET: ${{ secrets.AWS_PRODUCTION_BUCKET_NAME }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      CI: true
    strategy:
      matrix:
        node-version: [16.x]
    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install Packages
      run: npm ci
    - name: Build page
      working-directory: ./src
      run: npm run build
    - name: Deploy
      run: |
        eval $(aws sts assume-role --role-arn $AWS_DEPLOYMENT_ROLE_ARN --role-session-name s3-deploy | jq -r '.Credentials | "export AWS_ACCESS_KEY_ID=\(.AccessKeyId)\nexport AWS_SECRET_ACCESS_KEY=\(.SecretAccessKey)\nexport AWS_SESSION_TOKEN=\(.SessionToken)\n"')
        aws s3 sync build/ s3://$AWS_S3_BUCKET --debug
        aws cloudfront create-invalidation --distribution-id $JORDAN_CLOUDFRONT_DISTRIBUTION_ID --paths '/*' --debug
      env:
        AWS_S3_BUCKET: ${{ secrets.AWS_PRODUCTION_BUCKET_NAME }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEPLOYMENT_ROLE_ARN: ${{ secrets.AWS_ASSUME_ROLE_ARN }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        JORDAN_CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.JORDAN_CLOUDFRONT_DISTRIBUTION_ID }}