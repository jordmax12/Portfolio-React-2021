[{"/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/App.js":"1","/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/reportWebVitals.js":"2","/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/components/div/index.js":"3","/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/components/timelineSelector/index.js":"4","/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/index.js":"5","/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/helpers/helper.js":"6","/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/components/test.js":"7","/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/components/rightContainer/index.js":"8","/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/components/paginationButton/index.js":"9","/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/components/projectListItem/index.js":"10","/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/helpers/projectsConstants.js":"11"},{"size":1410,"mtime":1607569623316,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1607483715510,"results":"14","hashOfConfig":"13"},{"size":1535,"mtime":1607484133033,"results":"15","hashOfConfig":"13"},{"size":3338,"mtime":1607568303831,"results":"16","hashOfConfig":"13"},{"size":500,"mtime":1607483715508,"results":"17","hashOfConfig":"13"},{"size":4160,"mtime":1607563195838,"results":"18","hashOfConfig":"13"},{"size":9934,"mtime":1607661274486,"results":"19","hashOfConfig":"13"},{"size":6554,"mtime":1607567157820,"results":"20","hashOfConfig":"13"},{"size":594,"mtime":1607559912302,"results":"21","hashOfConfig":"13"},{"size":1789,"mtime":1607559930927,"results":"22","hashOfConfig":"13"},{"size":12752,"mtime":1607559994888,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1rdnejy",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/App.js",["49"],"/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/reportWebVitals.js",[],"/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/components/div/index.js",[],"/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/components/timelineSelector/index.js",["50","51","52","53","54","55"],"/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/index.js",[],"/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/helpers/helper.js",[],"/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/components/test.js",["56","57","58","59","60","61","62","63","64","65","66","67","68","69","70"],"import logo from '../logo.svg';\nimport '../App.scss';\nimport TimelineSelector from './timelineSelector'\nimport { useState } from 'react'\nimport { getImagePosition, getBackgroundTransition, random, parseNewLine } from '../helpers/helper';\nimport reactIcon from '../assets/react-tech-icon.png';\nimport reactNativeIcon from '../assets/react-native-tech-icon.png';\nimport androidIcon from '../assets/android-tech-icon.png';\nimport laravelIcon from '../assets/laravel-tech-icon.png';\nimport electronIcon from '../assets/electron-tech-icon.png';\nimport reactBackgroundImage from '../assets/react-background-image.png';\nimport reactNativeBackgroundImage from '../assets/react-native-background-image.png';\nimport androidBackgroundImage from '../assets/android-background-image.png';\nimport laravelBackgroundImage from '../assets/laravel-background-image.png';\nimport electronBackgroundImage from '../assets/electron-background-image.png';\n\n\nimport styles from \"./projects.module.scss\";\nimport Div from \"./div\";\nimport find from \"lodash/find\";\nimport { Transition, Spring } from \"react-spring/renderprops\";\nimport RightContainer from \"./rightContainer\";\nimport techDoodleImage from \"../assets/tech-doodle-background-image.png\";\n\nconst techList = [\n  {\n    id: 'react',\n    name: 'React',\n    firstLogo: reactIcon,\n    backgroundImage: reactBackgroundImage,\n    description: `I have the most as well as recent experience in React compared to other technology in my list. I have created and architected web projects from scratch as well as jumped on ongoing projects.\n    <br/><br/>I am familiar with recent techniques and libraries used in react like code-splitting, Hooks, React-Router, Final-Form, Redux, Redux-api-middleware, css in js, etc.`,\n    projects: ['snapteam', 'nykaa', 'wakency'],\n  },\n  {\n    id: 'android',\n    name: 'Android',\n    firstLogo: androidIcon,\n    backgroundImage: androidBackgroundImage, //but recently have not touched on Android development so have to freshen up a bit on it.\n    description: `I started my development journey with Android and have the most experience in it along with React.<br/><br/>\n    I have complete lifecycle experience on Android app developement from creating to publishing and managing, and have experience with needed android libraries which includes: Retrofit, Dagger, Picasso, ActiveAndroid, etc.`,\n    projects: ['vc_music_player', 'measure']\n  },\n  {\n    id: 'react-native',\n    name: 'React-Native',\n    firstLogo: reactNativeIcon,\n    backgroundImage: reactNativeBackgroundImage,\n    description: `I have created and published a React-Native app for iOS and Android so i am familiar with its lifecycle, while working with React-Native CLI.<br/><br/>\n    I have contributed some bug fixes to some open source React-Native libraries during my period developing on react native.\n    `,\n    projects: ['lighthouse', 'pulse']\n  },\n  {\n    id: 'laravel',\n    name: 'Laravel',\n    firstLogo: laravelIcon,\n    backgroundImage: laravelBackgroundImage,\n    description: `I have a bit of experience in Laravel and backend development although have not created any project from scratch but have worked on seperate modules and features.<br/><br/>\n    I am familiar with backend development and the frameworks features like: MVC architecture, HTML template engine (blade), Eloquent ORM, Artisan and Seeders.`,\n    projects: ['benefactory', 'snapteam']\n  },\n  {\n    id: 'electron',\n    name: 'Electron',\n    firstLogo: electronIcon,\n    backgroundImage: electronBackgroundImage,\n    description: 'I have experience in creating an electron app with the help of React while also considering platform specific technicalities during development like, Desktop/Web notifications, screen routing, storage.<br/><br/>Written configurations to bundle Web app and Electron app seperatly for both.',\n    projects: ['snapteam']\n  }\n];\n\n\n\nconst Test = (props) => {\n  const [isFirstAnimation, setIsFirstAnimation] = useState(false)\n  const [selectedTechId, setSelectedTechId] = useState('react')\n  const [imageAlignment, setImageAlignment] = useState(random(0,3))\n  const [imagePosition, setImagePosition] = useState(getImagePosition(selectedTechId, imageAlignment))\n  const [backgroundTransition, setBackgroundTransition] = useState(getBackgroundTransition(\n      selectedTechId,\n      imageAlignment,\n      isFirstAnimation\n  ))\n  const [techTransitionAnimation, setTechTransitionAnimation] = useState({\n    react: {\n      ...backgroundTransition,\n      imagePosition\n    }\n  })\n\n  const onTechSelected = ({ selectedId }) => {\n    const imageAlignment = random(0, 3);\n    const imagePosition = getImagePosition(selectedId, imageAlignment);\n    const backgroundTransition = getBackgroundTransition(\n      selectedId,\n      imageAlignment,\n      isFirstAnimation,\n    );\n    setSelectedTechId(selectedId)\n    setTechTransitionAnimation({\n      ...techTransitionAnimation,\n      [selectedId]: {\n        ...backgroundTransition,\n        imagePosition\n      }\n    })\n  };\n\n  const tech = find(techList, techItem => {\n    return techItem.id == selectedTechId;\n  });\n  return (\n    <div style={{ width: '100%', height: '100%' }}>\n        <Div row fillParent align=\"stretch\" className={styles.timeline_container}>\n            <img src={techDoodleImage} className={styles.background_static_image} />\n            {/* <div className={styles.left_background_gradient}></div> */}\n\n            {/* <Div className={styles.left_container}> */}\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-3\">\n                  <TimelineSelector\n                    selectedId={selectedTechId}\n                    listValue={techList}\n                    tech={tech}\n                    onItemSelected={onTechSelected}\n                />\n                </div>\n                <div className=\"col-3\">\n                  <Div className={styles.timeline_container}>\n                    <Transition\n                      items={tech}\n                      keys={tech => tech.id}\n                      from={{ opacity: 0 }}\n                      enter={{ opacity: 1 }}\n                      leave={{ opacity: 0 }}\n                      >\n                      {tech => tech.id && (\n                          value => {\n                          const { imagePosition, from, enter, leave } = techTransitionAnimation[tech.id];\n                          const fromAnimation = tech.id == selectedTechId ? from : enter;\n                          const toAnimation = tech.id == selectedTechId ? enter : leave;\n                          const isReactRelated =\n                              tech.id == \"react\" ||\n                              tech.id == \"react-native\" ||\n                              tech.id == \"electron\";\n\n                          return (\n                              <Spring\n                              from={{\n                                  opacity: isReactRelated ? fromAnimation.opacity : 1,\n                                  transform: fromAnimation.transform,\n                              }}\n                              to={{\n                                  opacity: isReactRelated ? toAnimation.opacity : 1,\n                                  transform: toAnimation.transform,\n                              }}\n                              >\n                              {\n                                  props => (\n                                  <Div\n                                      style={{\n                                      opacity: isReactRelated ? props.opacity : 1,\n                                      transform: !isReactRelated ? props.transform : \"unset\"\n                                      }}\n                                      className={styles.background_image_container}\n                                  >\n                                      <img\n                                      src={tech.backgroundImage}\n                                      style={{\n                                          left: 0,\n                                          right: imagePosition.right,\n                                          top: 0,\n                                          bottom: imagePosition.bottom,\n                                          transform: props.transform\n                                      }}\n                                      className={styles.background_image}\n                                      ></img>\n                                  </Div>\n                                  )\n                              }\n                              </Spring>\n                          )\n                          }\n                      )}\n                      </Transition>\n                  </Div>\n                </div>\n                <div className=\"col-6\">\n                  World\n                </div>\n              </div>\n            </div>\n\n\n              {/* <Transition\n                  items={tech}\n                  keys={tech => tech.id}\n                  from={{ opacity: 0 }}\n                  enter={{ opacity: 1 }}\n                  leave={{ opacity: 0 }}\n              >\n                  {tech => props => (\n                  <Div style={props} className={styles.content_container}> */}\n                      {/* <div className={styles.title}>{tech.name}</div> */}\n\n                      {/* <Div align=\"start\" className={styles.description_container}>\n                      <div className={styles.description}>{parseNewLine(tech.description)}</div> */}\n                      {/* <div className={styles.description}>{tech.position}</div> */}\n                  {/* </Div>\n                  // </Div>\n                  )}\n              </Transition> */}\n            {/* </Div> */}\n\n\n            {/* <RightContainer\n            item={tech}\n            className={styles.right_container}\n            /> */}\n        </Div>\n    </div>\n    \n  );\n}\n\nexport default Test;\n","/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/components/rightContainer/index.js",["71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87"],"/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/components/paginationButton/index.js",["88","89"],"import React, { Component } from 'react';\nimport Div from '../div';\nimport leftArrowIcon from \"../../assets/icons/icon-left-arrow.png\";\nimport styles from './pagination_button.module.scss';\n\nconst PaginationButton = ({ className, isEnabled, onClick, isRight }) => {\n  return (\n    <Div\n      align\n      justify\n      className={`${styles.button_container} ${className} ${!isEnabled ? styles.disabled : ''}`}\n      onClick={onClick}\n    >\n      <img className={`${styles.arrow} ${isRight ? styles.right_arrow : null}`} src={leftArrowIcon} />\n    </Div>\n  );\n}\n\nexport default PaginationButton;\n","/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/components/projectListItem/index.js",["90","91"],"import React from \"react\";\nimport styles from \"./project_list_item.module.scss\";\nimport Div from \"../div\";\nimport { useHistory, Link } from \"react-router-dom\";\n\nconst ProjectListItem = ({ index, project, style, className }) => {\n  const history = useHistory();\n\n  const onClickContainer = event => {\n    const { currentTarget } = event;\n    const containerRect = currentTarget.querySelector(\"#project-container\").getBoundingClientRect();\n    const imageRect = currentTarget.querySelector(\"#project-image\").getBoundingClientRect();\n\n    history.push(`/project/${project.slug}`, { containerRect, imageRect });\n    event.preventDefault();\n    event.stopPropagation();\n  };\n\n  return (\n    <Link\n      to={`/project/${project.slug}`}\n      className={styles.project_link}\n      onClick={onClickContainer}\n    >\n      <div\n        id=\"project-container\"\n        style={{ ...style, zIndex: index }}\n        className={`${styles.slide_items} ${className} ${\n          project.state == \"CENTERED\" ? styles.is_selected : \"\"\n        }`}\n      >\n        <Div fillParent align justify>\n          <img\n            id=\"project-image\"\n            src={project.icon}\n            className={styles.image}\n          />\n        </Div>\n\n        <Div\n          alignSelf=\"stretch\"\n          justify=\"start\"\n          align=\"end\"\n          className={styles.title_container}\n        >\n          <div className={styles.title}>{project.name}</div>\n          <div className={styles.description}>{project.tech.join(\" | \")}</div>\n          <div className={styles.overlay_view_project}>View Project</div>\n        </Div>\n        <div className={styles.bottom_background_gradient}></div>\n      </div>\n    </Link>\n  );\n};\n\nProjectListItem.defaultProps = {\n  index: 0,\n  className: \"\"\n};\n\nexport default ProjectListItem;\n","/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/helpers/projectsConstants.js",[],{"ruleId":"92","severity":1,"message":"93","line":1,"column":8,"nodeType":"94","messageId":"95","endLine":1,"endColumn":12},{"ruleId":"96","severity":1,"message":"97","line":13,"column":23,"nodeType":"98","messageId":"99","endLine":13,"endColumn":25},{"ruleId":"96","severity":1,"message":"100","line":16,"column":22,"nodeType":"98","messageId":"99","endLine":16,"endColumn":24},{"ruleId":"96","severity":1,"message":"100","line":51,"column":24,"nodeType":"98","messageId":"99","endLine":51,"endColumn":26},{"ruleId":"96","severity":1,"message":"100","line":57,"column":29,"nodeType":"98","messageId":"99","endLine":57,"endColumn":31},{"ruleId":"101","severity":1,"message":"102","line":67,"column":21,"nodeType":"103","endLine":67,"endColumn":73},{"ruleId":"101","severity":1,"message":"102","line":82,"column":23,"nodeType":"103","endLine":91,"endColumn":25},{"ruleId":"92","severity":1,"message":"93","line":1,"column":8,"nodeType":"94","messageId":"95","endLine":1,"endColumn":12},{"ruleId":"92","severity":1,"message":"104","line":5,"column":61,"nodeType":"94","messageId":"95","endLine":5,"endColumn":73},{"ruleId":"92","severity":1,"message":"105","line":22,"column":8,"nodeType":"94","messageId":"95","endLine":22,"endColumn":22},{"ruleId":"92","severity":1,"message":"106","line":76,"column":28,"nodeType":"94","messageId":"95","endLine":76,"endColumn":47},{"ruleId":"92","severity":1,"message":"107","line":78,"column":26,"nodeType":"94","messageId":"95","endLine":78,"endColumn":43},{"ruleId":"92","severity":1,"message":"108","line":79,"column":25,"nodeType":"94","messageId":"95","endLine":79,"endColumn":41},{"ruleId":"92","severity":1,"message":"109","line":80,"column":32,"nodeType":"94","messageId":"95","endLine":80,"endColumn":55},{"ruleId":"96","severity":1,"message":"97","line":111,"column":24,"nodeType":"98","messageId":"99","endLine":111,"endColumn":26},{"ruleId":"101","severity":1,"message":"102","line":116,"column":13,"nodeType":"103","endLine":116,"endColumn":85},{"ruleId":"96","severity":1,"message":"97","line":142,"column":57,"nodeType":"98","messageId":"99","endLine":142,"endColumn":59},{"ruleId":"96","severity":1,"message":"97","line":143,"column":55,"nodeType":"98","messageId":"99","endLine":143,"endColumn":57},{"ruleId":"96","severity":1,"message":"97","line":145,"column":39,"nodeType":"98","messageId":"99","endLine":145,"endColumn":41},{"ruleId":"96","severity":1,"message":"97","line":146,"column":39,"nodeType":"98","messageId":"99","endLine":146,"endColumn":41},{"ruleId":"96","severity":1,"message":"97","line":147,"column":39,"nodeType":"98","messageId":"99","endLine":147,"endColumn":41},{"ruleId":"101","severity":1,"message":"102","line":169,"column":39,"nodeType":"103","endLine":179,"endColumn":40},{"ruleId":"92","severity":1,"message":"110","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":26},{"ruleId":"92","severity":1,"message":"111","line":5,"column":10,"nodeType":"94","messageId":"95","endLine":5,"endColumn":16},{"ruleId":"92","severity":1,"message":"112","line":9,"column":10,"nodeType":"94","messageId":"95","endLine":9,"endColumn":20},{"ruleId":"92","severity":1,"message":"113","line":10,"column":8,"nodeType":"94","messageId":"95","endLine":10,"endColumn":24},{"ruleId":"92","severity":1,"message":"114","line":11,"column":8,"nodeType":"94","messageId":"95","endLine":11,"endColumn":23},{"ruleId":"115","severity":1,"message":"116","line":34,"column":6,"nodeType":"117","endLine":34,"endColumn":8,"suggestions":"118"},{"ruleId":"96","severity":1,"message":"97","line":80,"column":27,"nodeType":"98","messageId":"99","endLine":80,"endColumn":29},{"ruleId":"92","severity":1,"message":"119","line":99,"column":9,"nodeType":"94","messageId":"95","endLine":99,"endColumn":32},{"ruleId":"92","severity":1,"message":"120","line":148,"column":9,"nodeType":"94","messageId":"95","endLine":148,"endColumn":15},{"ruleId":"96","severity":1,"message":"97","line":152,"column":74,"nodeType":"98","messageId":"99","endLine":152,"endColumn":76},{"ruleId":"96","severity":1,"message":"97","line":153,"column":30,"nodeType":"98","messageId":"99","endLine":153,"endColumn":32},{"ruleId":"96","severity":1,"message":"97","line":158,"column":18,"nodeType":"98","messageId":"99","endLine":158,"endColumn":20},{"ruleId":"96","severity":1,"message":"97","line":165,"column":26,"nodeType":"98","messageId":"99","endLine":165,"endColumn":28},{"ruleId":"96","severity":1,"message":"97","line":170,"column":26,"nodeType":"98","messageId":"99","endLine":170,"endColumn":28},{"ruleId":"96","severity":1,"message":"97","line":194,"column":56,"nodeType":"98","messageId":"99","endLine":194,"endColumn":58},{"ruleId":"92","severity":1,"message":"121","line":197,"column":9,"nodeType":"94","messageId":"95","endLine":197,"endColumn":30},{"ruleId":"92","severity":1,"message":"122","line":198,"column":9,"nodeType":"94","messageId":"95","endLine":198,"endColumn":30},{"ruleId":"92","severity":1,"message":"110","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":26},{"ruleId":"101","severity":1,"message":"102","line":14,"column":7,"nodeType":"103","endLine":14,"endColumn":103},{"ruleId":"96","severity":1,"message":"97","line":29,"column":25,"nodeType":"98","messageId":"99","endLine":29,"endColumn":27},{"ruleId":"101","severity":1,"message":"102","line":33,"column":11,"nodeType":"103","endLine":37,"endColumn":13},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'parseNewLine' is defined but never used.","'RightContainer' is defined but never used.","'setIsFirstAnimation' is assigned a value but never used.","'setImageAlignment' is assigned a value but never used.","'setImagePosition' is assigned a value but never used.","'setBackgroundTransition' is assigned a value but never used.","'Component' is defined but never used.","'Spring' is defined but never used.","'Transition' is defined but never used.","'PaginationButton' is defined but never used.","'ProjectListItem' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'projects' and 'props'. Either include them or remove the dependency array. You can also do a functional update 'setProjects(p => ...)' if you only need 'projects' in the 'setProjects' call.","ArrayExpression",["123"],"'getPropertyBasedOnState' is assigned a value but never used.","'moveTo' is assigned a value but never used.","'isPrevButtonClickable' is assigned a value but never used.","'isNextButtonClickable' is assigned a value but never used.",{"desc":"124","fix":"125"},"Update the dependencies array to be: [projects, props]",{"range":"126","text":"127"},[1019,1021],"[projects, props]"]