[{"/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/App.js":"1","/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/reportWebVitals.js":"2","/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/components/div/index.js":"3","/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/components/timelineSelector/index.js":"4","/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/index.js":"5","/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/helpers/helper.js":"6","/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/components/test.js":"7","/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/components/rightContainer/index.js":"8","/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/components/paginationButton/index.js":"9","/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/components/projectListItem/index.js":"10","/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/helpers/projectsConstants.js":"11"},{"size":1370,"mtime":1607567511357,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1607483715510,"results":"14","hashOfConfig":"13"},{"size":1535,"mtime":1607484133033,"results":"15","hashOfConfig":"13"},{"size":3338,"mtime":1607568303831,"results":"16","hashOfConfig":"13"},{"size":500,"mtime":1607483715508,"results":"17","hashOfConfig":"13"},{"size":4160,"mtime":1607563195838,"results":"18","hashOfConfig":"13"},{"size":10380,"mtime":1607570378890,"results":"19","hashOfConfig":"13"},{"size":6554,"mtime":1607567157820,"results":"20","hashOfConfig":"13"},{"size":594,"mtime":1607559912302,"results":"21","hashOfConfig":"13"},{"size":1789,"mtime":1607559930927,"results":"22","hashOfConfig":"13"},{"size":12752,"mtime":1607559994888,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},"1rdnejy",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/App.js",["50"],"import logo from './logo.svg';\nimport './App.scss';\nimport { Suspense } from 'react'\nimport Test from './components/test'\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n// const PageTransitionExample = React.lazy(() => import(\"./examples/pageTransition\"));\n// const Landing = React.lazy(() => import(\"./modules/landing/landing\"));\n// const ProjectDetailsPage = React.lazy(() =>import(\"./modules/projectDetailsPage\"));\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Suspense fallback={null}>\n          <Switch>\n            {/* <Route\n              path=\"/example/pagetransition\"\n              component={PageTransitionExample}\n            /> */}\n\n            <Route path=\"/\">\n              {/* <Loader> */}\n                <Test />\n                {/* <Route \n                  exact\n                  path=\"/project/:projectSlug?\"\n                  children={(props) => (\n                    <AnimationLifecycle\n                      component={ProjectDetailsPage}\n                      whenToRender={(match)=>(match && match.params && match.params.projectSlug)}\n                      {...props}\n                    />\n                  )}\n                /> */}\n              {/* </Loader> */}\n            </Route>\n          </Switch>\n        </Suspense>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/reportWebVitals.js",[],"/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/components/div/index.js",[],"/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/components/timelineSelector/index.js",["51","52","53","54","55","56"],"/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/index.js",[],"/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/helpers/helper.js",[],"/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/components/test.js",["57","58","59","60","61","62","63","64","65","66","67"],"import logo from '../logo.svg';\nimport '../App.scss';\nimport TimelineSelector from './timelineSelector'\nimport { useState } from 'react'\nimport { getImagePosition, getBackgroundTransition, random, parseNewLine } from '../helpers/helper';\nimport reactIcon from '../assets/react-tech-icon.png';\nimport reactNativeIcon from '../assets/react-native-tech-icon.png';\nimport androidIcon from '../assets/android-tech-icon.png';\nimport laravelIcon from '../assets/laravel-tech-icon.png';\nimport electronIcon from '../assets/electron-tech-icon.png';\nimport reactBackgroundImage from '../assets/react-background-image.png';\nimport reactNativeBackgroundImage from '../assets/react-native-background-image.png';\nimport androidBackgroundImage from '../assets/android-background-image.png';\nimport laravelBackgroundImage from '../assets/laravel-background-image.png';\nimport electronBackgroundImage from '../assets/electron-background-image.png';\n\n\nimport styles from \"./projects.module.scss\";\nimport Div from \"./div\";\nimport find from \"lodash/find\";\nimport { Transition, Spring } from \"react-spring/renderprops\";\nimport RightContainer from \"./rightContainer\";\nimport techDoodleImage from \"../assets/tech-doodle-background-image.png\";\n\nconst techList = [\n  {\n    id: 'react',\n    name: 'React',\n    firstLogo: reactIcon,\n    backgroundImage: reactBackgroundImage,\n    description: `I have the most as well as recent experience in React compared to other technology in my list. I have created and architected web projects from scratch as well as jumped on ongoing projects.\n    <br/><br/>I am familiar with recent techniques and libraries used in react like code-splitting, Hooks, React-Router, Final-Form, Redux, Redux-api-middleware, css in js, etc.`,\n    projects: ['snapteam', 'nykaa', 'wakency'],\n  },\n  {\n    id: 'android',\n    name: 'Android',\n    firstLogo: androidIcon,\n    backgroundImage: androidBackgroundImage, //but recently have not touched on Android development so have to freshen up a bit on it.\n    description: `I started my development journey with Android and have the most experience in it along with React.<br/><br/>\n    I have complete lifecycle experience on Android app developement from creating to publishing and managing, and have experience with needed android libraries which includes: Retrofit, Dagger, Picasso, ActiveAndroid, etc.`,\n    projects: ['vc_music_player', 'measure']\n  },\n  {\n    id: 'react-native',\n    name: 'React-Native',\n    firstLogo: reactNativeIcon,\n    backgroundImage: reactNativeBackgroundImage,\n    description: `I have created and published a React-Native app for iOS and Android so i am familiar with its lifecycle, while working with React-Native CLI.<br/><br/>\n    I have contributed some bug fixes to some open source React-Native libraries during my period developing on react native.\n    `,\n    projects: ['lighthouse', 'pulse']\n  },\n  {\n    id: 'laravel',\n    name: 'Laravel',\n    firstLogo: laravelIcon,\n    backgroundImage: laravelBackgroundImage,\n    description: `I have a bit of experience in Laravel and backend development although have not created any project from scratch but have worked on seperate modules and features.<br/><br/>\n    I am familiar with backend development and the frameworks features like: MVC architecture, HTML template engine (blade), Eloquent ORM, Artisan and Seeders.`,\n    projects: ['benefactory', 'snapteam']\n  },\n  {\n    id: 'electron',\n    name: 'Electron',\n    firstLogo: electronIcon,\n    backgroundImage: electronBackgroundImage,\n    description: 'I have experience in creating an electron app with the help of React while also considering platform specific technicalities during development like, Desktop/Web notifications, screen routing, storage.<br/><br/>Written configurations to bundle Web app and Electron app seperatly for both.',\n    projects: ['snapteam']\n  }\n];\n\n\n\nfunction Test() {\n  const [isFirstAnimation, setIsFirstAnimation] = useState(false)\n  const [selectedTechId, setSelectedTechId] = useState('react')\n  const [imageAlignment, setImageAlignment] = useState(random(0,3))\n  const [imagePosition, setImagePosition] = useState(getImagePosition(selectedTechId, imageAlignment))\n  const [backgroundTransition, setBackgroundTransition] = useState(getBackgroundTransition(\n      selectedTechId,\n      imageAlignment,\n      isFirstAnimation\n  ))\n  // const selectedTechId = 'react';\n  // const imageAlignment = random(0, 3);\n  // const imagePosition = getImagePosition(selectedTechId, imageAlignment);\n  // const backgroundTransition = getBackgroundTransition(\n  //   selectedTechId,\n  //   imageAlignment,\n  //   isFirstAnimation\n  // );\n  console.log('logging backgroundTransition', backgroundTransition, 'logging imagePosition', imagePosition)\n  const [techTransitionAnimation, setTechTransitionAnimation] = useState({\n    react: {\n      ...backgroundTransition,\n      imagePosition\n    }\n  })\n\n  const onTechSelected = ({ selectedId }) => {\n    console.log(`logging selectedId: ${selectedId}`)\n\n    const imageAlignment = random(0, 3);\n    const imagePosition = getImagePosition(selectedId, imageAlignment);\n    const backgroundTransition = getBackgroundTransition(\n      selectedId,\n      imageAlignment,\n      isFirstAnimation,\n    );\n    setSelectedTechId(selectedId)\n    setTechTransitionAnimation({\n      ...techTransitionAnimation,\n      [selectedId]: {\n        ...backgroundTransition,\n        imagePosition\n      }\n    })\n    // setState({\n    //   selectedTechId: selectedId, techTransitionAnimation: {\n    //     ...techTransitionAnimation,\n    //     [selectedId]: {\n    //       ...backgroundTransition,\n    //       imagePosition\n    //     }\n    //   }\n    // });\n  };\n\n  const tech = find(techList, techItem => {\n    return techItem.id == selectedTechId;\n  });\n  console.log('logging imagePosition in test', imagePosition)\n  return (\n    // <div className=\"App\">\n    //   <div className=\"project-holder\">\n    //     <TimelineSelector\n    //         selectedId={selectedTechId}\n    //         listValue={techList}\n    //         tech\n    //         onItemSelected={onTechSelected}\n    //       />\n    //   </div>\n    // </div>\n    <div style={{ width: '100%', height: '100%' }}>\n        <Div row fillParent align=\"stretch\" className={styles.timeline_container}>\n            <img src={techDoodleImage} className={styles.background_static_image} />\n            {/* <div className={styles.left_background_gradient}></div> */}\n\n            {/* <Div className={styles.left_container}> */}\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-3\">\n                  <TimelineSelector\n                    selectedId={selectedTechId}\n                    listValue={techList}\n                    tech={tech}\n                    onItemSelected={onTechSelected}\n                />\n                </div>\n                <div className=\"col-3\">\n                  Hello \n                </div>\n                <div className=\"col-6\">\n                  World\n                </div>\n              </div>\n            </div>\n\n\n              {/* <Transition\n                  items={tech}\n                  keys={tech => tech.id}\n                  from={{ opacity: 0 }}\n                  enter={{ opacity: 1 }}\n                  leave={{ opacity: 0 }}\n              >\n                  {tech => props => (\n                  <Div style={props} className={styles.content_container}> */}\n                      {/* <div className={styles.title}>{tech.name}</div> */}\n\n                      {/* <Div align=\"start\" className={styles.description_container}>\n                      <div className={styles.description}>{parseNewLine(tech.description)}</div> */}\n                      {/* <div className={styles.description}>{tech.position}</div> */}\n                  {/* </Div>\n                  // </Div>\n                  )}\n              </Transition> */}\n            {/* </Div> */}\n            {/* <Transition\n            items={tech}\n            keys={tech => tech.id}\n            from={{ opacity: 0 }}\n            enter={{ opacity: 1 }}\n            leave={{ opacity: 0 }}\n            >\n            {tech => tech.id && (\n                value => {\n                const { imagePosition, from, enter, leave } = techTransitionAnimation[tech.id];\n                const fromAnimation = tech.id == selectedTechId ? from : enter;\n                const toAnimation = tech.id == selectedTechId ? enter : leave;\n                const isReactRelated =\n                    tech.id == \"react\" ||\n                    tech.id == \"react-native\" ||\n                    tech.id == \"electron\";\n\n                return (\n                    <Spring\n                    from={{\n                        opacity: isReactRelated ? fromAnimation.opacity : 1,\n                        transform: fromAnimation.transform,\n                    }}\n                    to={{\n                        opacity: isReactRelated ? toAnimation.opacity : 1,\n                        transform: toAnimation.transform,\n                    }}\n                    >\n                    {\n                        props => (\n                        <Div\n                            style={{\n                            opacity: isReactRelated ? props.opacity : 1,\n                            transform: !isReactRelated ? props.transform : \"unset\"\n                            }}\n                            className={styles.background_image_container}\n                        >\n                            <img\n                            src={tech.backgroundImage}\n                            style={{\n                                left: 0,\n                                right: imagePosition.right,\n                                top: 0,\n                                bottom: imagePosition.bottom,\n                                transform: props.transform\n                            }}\n                            className={styles.background_image}\n                            ></img>\n                        </Div>\n                        )\n                    }\n                    </Spring>\n                )\n                }\n            )}\n            </Transition> */}\n\n            {/* <RightContainer\n            item={tech}\n            className={styles.right_container}\n            /> */}\n        </Div>\n    </div>\n    \n  );\n}\n\nexport default Test;\n","/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/components/rightContainer/index.js",["68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84"],"/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/components/paginationButton/index.js",["85","86"],"import React, { Component } from 'react';\nimport Div from '../div';\nimport leftArrowIcon from \"../../assets/icons/icon-left-arrow.png\";\nimport styles from './pagination_button.module.scss';\n\nconst PaginationButton = ({ className, isEnabled, onClick, isRight }) => {\n  return (\n    <Div\n      align\n      justify\n      className={`${styles.button_container} ${className} ${!isEnabled ? styles.disabled : ''}`}\n      onClick={onClick}\n    >\n      <img className={`${styles.arrow} ${isRight ? styles.right_arrow : null}`} src={leftArrowIcon} />\n    </Div>\n  );\n}\n\nexport default PaginationButton;\n","/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/components/projectListItem/index.js",["87","88"],"import React from \"react\";\nimport styles from \"./project_list_item.module.scss\";\nimport Div from \"../div\";\nimport { useHistory, Link } from \"react-router-dom\";\n\nconst ProjectListItem = ({ index, project, style, className }) => {\n  const history = useHistory();\n\n  const onClickContainer = event => {\n    const { currentTarget } = event;\n    const containerRect = currentTarget.querySelector(\"#project-container\").getBoundingClientRect();\n    const imageRect = currentTarget.querySelector(\"#project-image\").getBoundingClientRect();\n\n    history.push(`/project/${project.slug}`, { containerRect, imageRect });\n    event.preventDefault();\n    event.stopPropagation();\n  };\n\n  return (\n    <Link\n      to={`/project/${project.slug}`}\n      className={styles.project_link}\n      onClick={onClickContainer}\n    >\n      <div\n        id=\"project-container\"\n        style={{ ...style, zIndex: index }}\n        className={`${styles.slide_items} ${className} ${\n          project.state == \"CENTERED\" ? styles.is_selected : \"\"\n        }`}\n      >\n        <Div fillParent align justify>\n          <img\n            id=\"project-image\"\n            src={project.icon}\n            className={styles.image}\n          />\n        </Div>\n\n        <Div\n          alignSelf=\"stretch\"\n          justify=\"start\"\n          align=\"end\"\n          className={styles.title_container}\n        >\n          <div className={styles.title}>{project.name}</div>\n          <div className={styles.description}>{project.tech.join(\" | \")}</div>\n          <div className={styles.overlay_view_project}>View Project</div>\n        </Div>\n        <div className={styles.bottom_background_gradient}></div>\n      </div>\n    </Link>\n  );\n};\n\nProjectListItem.defaultProps = {\n  index: 0,\n  className: \"\"\n};\n\nexport default ProjectListItem;\n","/Users/jordanmax/Desktop/ActiveProjects/2021-portfolio-react/src/helpers/projectsConstants.js",[],{"ruleId":"89","severity":1,"message":"90","line":1,"column":8,"nodeType":"91","messageId":"92","endLine":1,"endColumn":12},{"ruleId":"93","severity":1,"message":"94","line":13,"column":23,"nodeType":"95","messageId":"96","endLine":13,"endColumn":25},{"ruleId":"93","severity":1,"message":"97","line":16,"column":22,"nodeType":"95","messageId":"96","endLine":16,"endColumn":24},{"ruleId":"93","severity":1,"message":"97","line":51,"column":24,"nodeType":"95","messageId":"96","endLine":51,"endColumn":26},{"ruleId":"93","severity":1,"message":"97","line":57,"column":29,"nodeType":"95","messageId":"96","endLine":57,"endColumn":31},{"ruleId":"98","severity":1,"message":"99","line":67,"column":21,"nodeType":"100","endLine":67,"endColumn":73},{"ruleId":"98","severity":1,"message":"99","line":82,"column":23,"nodeType":"100","endLine":91,"endColumn":25},{"ruleId":"89","severity":1,"message":"90","line":1,"column":8,"nodeType":"91","messageId":"92","endLine":1,"endColumn":12},{"ruleId":"89","severity":1,"message":"101","line":5,"column":61,"nodeType":"91","messageId":"92","endLine":5,"endColumn":73},{"ruleId":"89","severity":1,"message":"102","line":21,"column":10,"nodeType":"91","messageId":"92","endLine":21,"endColumn":20},{"ruleId":"89","severity":1,"message":"103","line":21,"column":22,"nodeType":"91","messageId":"92","endLine":21,"endColumn":28},{"ruleId":"89","severity":1,"message":"104","line":22,"column":8,"nodeType":"91","messageId":"92","endLine":22,"endColumn":22},{"ruleId":"89","severity":1,"message":"105","line":76,"column":28,"nodeType":"91","messageId":"92","endLine":76,"endColumn":47},{"ruleId":"89","severity":1,"message":"106","line":78,"column":26,"nodeType":"91","messageId":"92","endLine":78,"endColumn":43},{"ruleId":"89","severity":1,"message":"107","line":79,"column":25,"nodeType":"91","messageId":"92","endLine":79,"endColumn":41},{"ruleId":"89","severity":1,"message":"108","line":80,"column":32,"nodeType":"91","messageId":"92","endLine":80,"endColumn":55},{"ruleId":"93","severity":1,"message":"94","line":131,"column":24,"nodeType":"95","messageId":"96","endLine":131,"endColumn":26},{"ruleId":"98","severity":1,"message":"99","line":147,"column":13,"nodeType":"100","endLine":147,"endColumn":85},{"ruleId":"89","severity":1,"message":"109","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":26},{"ruleId":"89","severity":1,"message":"103","line":5,"column":10,"nodeType":"91","messageId":"92","endLine":5,"endColumn":16},{"ruleId":"89","severity":1,"message":"102","line":9,"column":10,"nodeType":"91","messageId":"92","endLine":9,"endColumn":20},{"ruleId":"89","severity":1,"message":"110","line":10,"column":8,"nodeType":"91","messageId":"92","endLine":10,"endColumn":24},{"ruleId":"89","severity":1,"message":"111","line":11,"column":8,"nodeType":"91","messageId":"92","endLine":11,"endColumn":23},{"ruleId":"112","severity":1,"message":"113","line":34,"column":6,"nodeType":"114","endLine":34,"endColumn":8,"suggestions":"115"},{"ruleId":"93","severity":1,"message":"94","line":80,"column":27,"nodeType":"95","messageId":"96","endLine":80,"endColumn":29},{"ruleId":"89","severity":1,"message":"116","line":99,"column":9,"nodeType":"91","messageId":"92","endLine":99,"endColumn":32},{"ruleId":"89","severity":1,"message":"117","line":148,"column":9,"nodeType":"91","messageId":"92","endLine":148,"endColumn":15},{"ruleId":"93","severity":1,"message":"94","line":152,"column":74,"nodeType":"95","messageId":"96","endLine":152,"endColumn":76},{"ruleId":"93","severity":1,"message":"94","line":153,"column":30,"nodeType":"95","messageId":"96","endLine":153,"endColumn":32},{"ruleId":"93","severity":1,"message":"94","line":158,"column":18,"nodeType":"95","messageId":"96","endLine":158,"endColumn":20},{"ruleId":"93","severity":1,"message":"94","line":165,"column":26,"nodeType":"95","messageId":"96","endLine":165,"endColumn":28},{"ruleId":"93","severity":1,"message":"94","line":170,"column":26,"nodeType":"95","messageId":"96","endLine":170,"endColumn":28},{"ruleId":"93","severity":1,"message":"94","line":194,"column":56,"nodeType":"95","messageId":"96","endLine":194,"endColumn":58},{"ruleId":"89","severity":1,"message":"118","line":197,"column":9,"nodeType":"91","messageId":"92","endLine":197,"endColumn":30},{"ruleId":"89","severity":1,"message":"119","line":198,"column":9,"nodeType":"91","messageId":"92","endLine":198,"endColumn":30},{"ruleId":"89","severity":1,"message":"109","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":26},{"ruleId":"98","severity":1,"message":"99","line":14,"column":7,"nodeType":"100","endLine":14,"endColumn":103},{"ruleId":"93","severity":1,"message":"94","line":29,"column":25,"nodeType":"95","messageId":"96","endLine":29,"endColumn":27},{"ruleId":"98","severity":1,"message":"99","line":33,"column":11,"nodeType":"100","endLine":37,"endColumn":13},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'parseNewLine' is defined but never used.","'Transition' is defined but never used.","'Spring' is defined but never used.","'RightContainer' is defined but never used.","'setIsFirstAnimation' is assigned a value but never used.","'setImageAlignment' is assigned a value but never used.","'setImagePosition' is assigned a value but never used.","'setBackgroundTransition' is assigned a value but never used.","'Component' is defined but never used.","'PaginationButton' is defined but never used.","'ProjectListItem' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'projects' and 'props'. Either include them or remove the dependency array. You can also do a functional update 'setProjects(p => ...)' if you only need 'projects' in the 'setProjects' call.","ArrayExpression",["120"],"'getPropertyBasedOnState' is assigned a value but never used.","'moveTo' is assigned a value but never used.","'isPrevButtonClickable' is assigned a value but never used.","'isNextButtonClickable' is assigned a value but never used.",{"desc":"121","fix":"122"},"Update the dependencies array to be: [projects, props]",{"range":"123","text":"124"},[1019,1021],"[projects, props]"]